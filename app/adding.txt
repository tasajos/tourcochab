1.- crear un boton
2.- declarar variables
 EditText name,type,detail,order,locationlong,locationlat,datef;

3.- llamar las variables
        protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_registrarevento);

              name = findViewById(R.id.nombre);
                 Spinner type = findViewById(R.id.tipo_spinner);
                 detail = findViewById(R.id.detalle);
                 order = findViewById(R.id.pedido);
                 locationlong = findViewById(R.id.ubicacion);
                 locationlat = findViewById(R.id.ubicacion2);
                 datef = findViewById(R.id.fecha);


        }
4.- añadir event on click

        Button btn_registrar;
        Button btnRegistrar = findViewById(R.id.btn_registrar);
        btnRegistrar.setOnClickListener(new View.OnClickListener() {

          public void onClick(View view) {

             String namet = name.getText().toString().trim();
             String typet = type.getSelectedItem().toString();
             String detailt = detail.getText().toString().trim();
             String ordert = order.getText().toString().trim();
             String locationlongt = locationlong.getText().toString().trim();
             String locationlatt = locationlat.getText().toString().toLowerCase();
             String dateft = datef.getText().toString().toLowerCase();
          }
        }

 5. Validaciones

  btnRegistrar.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                String namet = name.getText().toString().trim();
                String typet = type.getSelectedItem().toString();
                String detailt = detail.getText().toString().trim();
                String ordert = order.getText().toString().trim();
                String locationlongt = locationlong.getText().toString().trim();
                String locationlatt = locationlat.getText().toString().toLowerCase();
                String dateft = datef.getText().toString().toLowerCase();

                if(namet.isEmpty() && typet.isEmpty() && detailt.isEmpty() && ordert.isEmpty()
                        && locationlongt.isEmpty() && locationlatt.isEmpty()){
                    Toast.makeText(getApplicationContext(), "Debe Ingresar datos", Toast.LENGTH_SHORT).show();

                }else {

                    postTour (namet,typet,detailt,ordert,locationlongt,locationlatt,dateft);


                }

  6. Create Method postTour
  7.-Create Activiry

result
  private void postTour(String namet, String typet, String detailt, String ordert, String locationlongt, String locationlatt, String dateft) {
    }

  8. añadir variable
  private FirebaseFirestore mfirestore;
  9.- añadir dependencia (alt+intro)
  10.- declarar instancia
    mfirestore = FirebaseFirestore.getInstance();

11.- ir a posTour
 private void postTour(String namet, String typet, String detailt, String ordert, String locationlongt, String locationlatt, String dateft) {
mfirestore.collection("tourcochadb").add(map).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
    @Override
    public void onSuccess(DocumentReference documentReference) {

    }
}).addOnFailureListener(new OnFailureListener() {
    @Override
    public void onFailure(@NonNull Exception e) {

    }
});

12.- adicionar toast

 private void postTour(String namet, String typet, String detailt, String ordert, String locationlongt, String locationlatt) {
mfirestore.collection("tourcochadb").add(map).addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
    @Override
    public void onSuccess(DocumentReference documentReference) {

        Toast.makeText(getApplicationContext(), "Registrado Exitosamente", Toast.LENGTH_SHORT).show();
    }
}).addOnFailureListener(new OnFailureListener() {
    @Override
    public void onFailure(@NonNull Exception e) {
        Toast.makeText(getApplicationContext(), "Error al ingresar", Toast.LENGTH_SHORT).show();

    }
});


13.-declarar sentencias map
private void postTour(String namet, String typet, String detailt, String ordert, String locationlongt, String locationlatt,String dateft) {

        Map<String, Object> map = new HashMap<>();

 14.- llamar las variables

 private void postTour(String namet, String typet, String detailt, String ordert, String locationlongt, String locationlatt,String dateft) {

        Map<String, Object> map = new HashMap<>();
        map.put("name",namet);
        map.put("type",typet);
        map.put("detail",detailt);
        map.put("order",ordert);
        map.put("locationlong",locationlongt);
        map.put("locationlat",locationlatt);
        map.put("datef",dateft);

15.- finalizar funcion
    public void onSuccess(DocumentReference documentReference) {

        Toast.makeText(getApplicationContext(), "Registrado Exitosamente", Toast.LENGTH_SHORT).show();
        finish();

    }






